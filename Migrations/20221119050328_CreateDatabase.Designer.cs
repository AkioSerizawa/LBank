// <auto-generated />
using System;
using LBank.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace LBank.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20221119050328_CreateDatabase")]
    partial class CreateDatabase
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.11")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LBank.Models.Account", b =>
                {
                    b.Property<int>("AccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("AccountBalance")
                        .HasColumnType("Decimal")
                        .HasColumnName("AccountBalance");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("AccountId");

                    b.HasIndex("UserId");

                    b.ToTable("Account");
                });

            modelBuilder.Entity("LBank.Models.AccountTransaction", b =>
                {
                    b.Property<int>("TransactionId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccountId")
                        .HasColumnType("int");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("DateTime")
                        .HasColumnName("TransactionDate");

                    b.Property<string>("TransactionDocument")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("NVARCHAR(35)")
                        .HasColumnName("TransactionDocument");

                    b.Property<string>("TransactionHistory")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("NVARCHAR(220)")
                        .HasColumnName("TransactionHistory");

                    b.Property<decimal>("TransactionValue")
                        .HasColumnType("Decimal")
                        .HasColumnName("TransactionValue");

                    b.Property<int>("TypeId")
                        .HasColumnType("int");

                    b.HasKey("TransactionId");

                    b.HasIndex("AccountId");

                    b.HasIndex("TypeId");

                    b.ToTable("AccountTransaction");
                });

            modelBuilder.Entity("LBank.Models.TransactionType", b =>
                {
                    b.Property<int>("TypeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("TypeDescription")
                        .IsRequired()
                        .HasMaxLength(35)
                        .HasColumnType("NVARCHAR(35)")
                        .HasColumnName("TypeDescription");

                    b.HasKey("TypeId");

                    b.ToTable("TransactionType");
                });

            modelBuilder.Entity("LBank.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("UserEmail")
                        .IsRequired()
                        .HasMaxLength(220)
                        .HasColumnType("NVARCHAR(220)")
                        .HasColumnName("UserEmail");

                    b.Property<string>("UserName")
                        .IsRequired()
                        .HasMaxLength(80)
                        .HasColumnType("NVARCHAR(80)")
                        .HasColumnName("UserName");

                    b.Property<string>("UserPassword")
                        .IsRequired()
                        .HasColumnType("NVARCHAR")
                        .HasColumnName("UserPassword");

                    b.Property<string>("UserSlug")
                        .IsRequired()
                        .HasMaxLength(65)
                        .HasColumnType("NVARCHAR(65)")
                        .HasColumnName("UserSlug");

                    b.HasKey("UserId");

                    b.ToTable("User");
                });

            modelBuilder.Entity("LBank.Models.Account", b =>
                {
                    b.HasOne("LBank.Models.User", "User")
                        .WithMany("Account")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_ACCOUNT_USER")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("LBank.Models.AccountTransaction", b =>
                {
                    b.HasOne("LBank.Models.Account", "Account")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("AccountId")
                        .HasConstraintName("FK_TRANSACTION_ACCOUNT")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("LBank.Models.TransactionType", "TransactionType")
                        .WithMany("AccountTransaction")
                        .HasForeignKey("TypeId")
                        .HasConstraintName("FK_TRANSACTION_TYPE")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Account");

                    b.Navigation("TransactionType");
                });

            modelBuilder.Entity("LBank.Models.Account", b =>
                {
                    b.Navigation("AccountTransaction");
                });

            modelBuilder.Entity("LBank.Models.TransactionType", b =>
                {
                    b.Navigation("AccountTransaction");
                });

            modelBuilder.Entity("LBank.Models.User", b =>
                {
                    b.Navigation("Account");
                });
#pragma warning restore 612, 618
        }
    }
}
